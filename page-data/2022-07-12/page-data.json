{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/2022-07-12/",
    "result": {"data":{"cur":{"id":"d75ad42e-8937-52c4-ba4a-e8b647bc3231","html":"<h3 id=\"-취업-가능할까요\" style=\"position:relative;\"><a href=\"#-%EC%B7%A8%EC%97%85-%EA%B0%80%EB%8A%A5%ED%95%A0%EA%B9%8C%EC%9A%94\" aria-label=\" 취업 가능할까요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✨ 취업.. 가능할까요?</h3>\n<p>코드 스테이츠를 수료 후에 취업을 할 수 있는가? 고민하는 사람들이 많을 것이다.\r\n나도 그렇다.\r\n끊임없이 남과 비교하며 포기하고 싶다는 생각도 많이 들겠지만, 이 시간을 통해 얻은 교훈은…\r\n‘남’이 아닌 ‘나의 어제’와 비교하라는 것이다.😊 😊</p>\n<br>\n<h3 id=\"-잠이-오면-잠을-자요\" style=\"position:relative;\"><a href=\"#-%EC%9E%A0%EC%9D%B4-%EC%98%A4%EB%A9%B4-%EC%9E%A0%EC%9D%84-%EC%9E%90%EC%9A%94\" aria-label=\" 잠이 오면 잠을 자요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✨ 잠이 오면 잠을 자요!</h3>\n<p>나는 잠을 빨리 자고 빨리 일어나는 편이다.\r\n늦게 자서 아침에 일어날 때 피곤하면 짜증지수가 올라가기 때문에 차라리 빨리자서 새벽 5시에 일어나는 것이 더 낫다.</p>\n<br>\n<blockquote>\n<p>기억해야 할 명언</p>\n</blockquote>\n<p><strong>“우울한 사람은 과거에 사는 자이고\r\n불안한 사람은 미래에 사는 자이며\r\n평안한 사람은 이 순간에 사는 자다.”\r\n-노자-</strong></p>\n<p>➡️ 시간이 지날수록 페어와 같이 프로그래밍 하는 시간이 소중해진다. 다양한 사람들과 문제를 같이 해결할 수 있어서 정말 좋은 시간인 것 같다.❤️</p>\n<br>\n<blockquote>\n<p>전공자로서의 장점을 찾았다!</p>\n</blockquote>\n<p>나는 전공자라서 약간의 부끄러움(?)을 가지고 있었다.\r\n‘전공자가 왜 여기에 들어오지?’ 라는 궁금해할 수 있다.\r\n실제로 나는 프론트엔드 수업을 들을 기회가 없었고, 프론드엔드로만 따진다면 비전공자나 다름 없었다고 생각했다.\r\n처음부터 다시 시작한다는 마음으로 다른 사람들과 프로젝트도 해보고 하면서 느낀점은..!\r\n<strong>전공자라서 다른 사람들보다 더 아는 부분에 대해 정확히 설명해줄 수 있다는 장점</strong>이 너무 좋다고 느껴졌다.\r\n페어가 모르는 부분에 설명을 들었을 때 이해됐다면서 고맙다는 말을 했을 때가 가장 뿌듯했다.💜\r\n그래서 페어들을 위해서라도 예습과 복습을 더 꾸준히 열심히 해야겠다는 생각이 들었다.</p>\n<p><strong>💡 기술적인 얘기에 대해서는 다음 블로깅을 통해 다루도록 하겠습니다!</strong></p>","excerpt":"✨ 취업.. 가능할까요? 코드 스테이츠를 수료 후에 취업을 할 수 있는가? 고민하는 사람들이 많을 것이다.\r\n나도 그렇다.\r\n끊임없이 남과 비교하며 포기하고 싶다는 생각도 많이 들겠지만, 이 시간을 통해 얻은 교훈은…\r\n‘남’이 아닌 ‘나의 어제’와 비교하라는 것이다.😊 😊 ✨ 잠이 오면 잠을 자요! 나는 잠을 빨리 자고 빨리 일어나는 편이다.\r\n늦게 자서 아침에 일어날 때 피곤하면 짜증지수가 올라가기 때문에 차라리 빨리자서 새벽 5시에 일어나는 것이 더 낫다. 기억해야 할 명언 “우울한 사람은 과거에 사는 자이고\r\n불안한 사람은 미래에 사는 자이며\r\n평안한 사람은 이 순간에 사는 자다.”\r\n-노자- ➡️ 시간이 지날수록 페어와 같이 프로그래밍 하는 시간이 소중해진다. 다양한 사람들과 문제를 같이 해결할 수 있어서 정말 좋은 시간인 것 같다.❤️ 전공자로서의 장점을 찾았다! 나는 전공자라서 약간의 부끄러움(?)을 가지고 있었다.\r\n‘전공자가 왜 여기에 들어오지?’ 라는 궁금해할 수 있…","frontmatter":{"date":"July 12, 2022","title":"📻 보이는 라디오","categories":"codestates blog","author":"김예린","emoji":null},"fields":{"slug":"/2022-07-12/"}},"next":{"id":"1c7abece-5161-5261-be68-51ac5458544d","html":"<h2 id=\"원시자료형과-참조자료형\" style=\"position:relative;\"><a href=\"#%EC%9B%90%EC%8B%9C%EC%9E%90%EB%A3%8C%ED%98%95%EA%B3%BC-%EC%B0%B8%EC%A1%B0%EC%9E%90%EB%A3%8C%ED%98%95\" aria-label=\"원시자료형과 참조자료형 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>원시자료형과 참조자료형</h2>\n<h3 id=\"원시-자료형\" style=\"position:relative;\"><a href=\"#%EC%9B%90%EC%8B%9C-%EC%9E%90%EB%A3%8C%ED%98%95\" aria-label=\"원시 자료형 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>원시 자료형</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">string<span class=\"token punctuation\">,</span> number<span class=\"token punctuation\">,</span> bigInt<span class=\"token punctuation\">,</span> boolean<span class=\"token punctuation\">,</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span> symbol<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>데이터의 크기와는 관계없이 변수에는  <strong>하나</strong>의 데이터만 담습니다.</li>\n</ul>\n<h2 id=\"\" style=\"position:relative;\"><a href=\"#\" aria-label=\" permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<h3 id=\"참조-자료형\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EC%A1%B0-%EC%9E%90%EB%A3%8C%ED%98%95\" aria-label=\"참조 자료형 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참조 자료형</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">배열</span> <span class=\"token punctuation\">(</span><span class=\"token function\">Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">객체</span> <span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">함수</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>변수에 값이 아닌 주소를 저장합니다.</li>\n<li>주소를 따라가 보면 특별한 데이터 보관함을 찾을 수 있고, 사이즈가 <strong>동적</strong>으로 변할 수 있습니다. (= <strong>heap</strong>)</li>\n</ul>\n<br>\n<blockquote>\n<p><strong>결론</strong></p>\n</blockquote>\n<ul>\n<li>원시 자료형 : 각 변수 간의 원시 타입 데이터를 복사할 경우, 데이터 값이 복사되기 때문에 <strong>기존의 데이터에 영향이 가지 않는다.</strong></li>\n</ul>\n<h4 id=\"-1\" style=\"position:relative;\"><a href=\"#-1\" aria-label=\" 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<ul>\n<li>참조 자료형 : 주소를 복사하기 때문에 복사한 데이터에서 원소를 변경하면 주소 안의 데이터가 변경된다. 따라서, <strong>기존의 데이터에 영향이 간다.</strong></li>\n</ul>","frontmatter":{"date":"July 11, 2022","title":"[4주차] [JavaScript] 원시 자료형과 참조 자료형의 특징과 종류 - 1일차","categories":"codestates blog","author":"김예린","emoji":null},"fields":{"slug":"/2022-07-11/"}},"prev":{"id":"2e6b67a7-24d4-562c-845e-a1339b14c251","html":"<h3 id=\"01_introductionjs\" style=\"position:relative;\"><a href=\"#01_introductionjs\" aria-label=\"01_introductionjs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>01_Introduction.js</h3>\n<p>✨ <strong>expect</strong> 함수</p>\n<blockquote>\n<p><strong>테스트하는 값과 기대값을 비교</strong></p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">expect</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">.</span><span class=\"token function\">equal</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'sum(1, 2)의 결과값은 3과 같아야(equal) 한다'</span></code></pre></div>\n<br>\n<h3 id=\"04_scopejs\" style=\"position:relative;\"><a href=\"#04_scopejs\" aria-label=\"04_scopejs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>04_Scope.js</h3>\n<p>✨ 함수 선언식(declaration)과 함수 표현식(expression)의 차이</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">funcDeclared</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">return</span> <span class=\"token string\">'this is a function declaration'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> funDeclared<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 'function'</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function-variable function\">funcExpressed</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">return</span> <span class=\"token string\">'this is a function expression'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n\r\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> funExpressed<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 'string'</span></code></pre></div>\n<p>✨ 자바스크립트 함수 호이스팅(hoisting)</p>\n<p><strong>인터프리터가 변수와 함수의 메모리 공간을 선언 전에 미리 할당하는 것</strong></p>\n<p>“변수의 선언과 초기화를 분리한 후, 선언만 코드의 최상단으로 옮기는 것” 이라고 주로 설명할 수 있다.</p>\n<p>✨ lexical scope\r\n자바스크립트는 함수가 호출되는 환경와 별개로, 기존에 선언되어 있던 환경 - 어휘적 환경 - 을 기준으로 변수를 조회하려고 함.</p>\n<br>\n<h3 id=\"05_arrowfunctionjs\" style=\"position:relative;\"><a href=\"#05_arrowfunctionjs\" aria-label=\"05_arrowfunctionjs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>05_ArrowFunction.js</h3>\n<p>✨ 화살표 함수 사용법</p>\n<ul>\n<li>function 키워드를 생략하고 화살표 => 를 붙인다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">add</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token punctuation\">,</span> y</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token keyword\">return</span> x <span class=\"token operator\">+</span> y\r\n    <span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>리턴을 생략할 수 있습니다</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">subtract</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token punctuation\">,</span> y</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> x <span class=\"token operator\">-</span> y</code></pre></div>\n<br>\n<h3 id=\"-원본-변경-메서드-vs-간접-변경-메서드\" style=\"position:relative;\"><a href=\"#-%EC%9B%90%EB%B3%B8-%EB%B3%80%EA%B2%BD-%EB%A9%94%EC%84%9C%EB%93%9C-vs-%EA%B0%84%EC%A0%91-%EB%B3%80%EA%B2%BD-%EB%A9%94%EC%84%9C%EB%93%9C\" aria-label=\" 원본 변경 메서드 vs 간접 변경 메서드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>💡 원본 변경 메서드 vs 간접 변경 메서드</h3>\n<h4 id=\"1-원본-변경-메서드\" style=\"position:relative;\"><a href=\"#1-%EC%9B%90%EB%B3%B8-%EB%B3%80%EA%B2%BD-%EB%A9%94%EC%84%9C%EB%93%9C\" aria-label=\"1 원본 변경 메서드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 원본 변경 메서드</h4>\n<ul>\n<li>push()</li>\n<li>pop()</li>\n<li>shift()</li>\n<li>unshift()</li>\n<li>splice()</li>\n</ul>\n<h4 id=\"2-간접-변경-메서드\" style=\"position:relative;\"><a href=\"#2-%EA%B0%84%EC%A0%91-%EB%B3%80%EA%B2%BD-%EB%A9%94%EC%84%9C%EB%93%9C\" aria-label=\"2 간접 변경 메서드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 간접 변경 메서드</h4>\n<ul>\n<li>slice() // slice(0) === slice()</li>\n<li>concat()</li>\n<li>join()</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"> <span class=\"token keyword\">const</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'zero'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'one'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'two'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'three'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'four'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'five'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n\r\n <span class=\"token keyword\">const</span> copiedArr <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    copiedArr<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'changed in copiedArr'</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">.</span><span class=\"token function\">equal</span><span class=\"token punctuation\">(</span><span class=\"token string\">'three'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//원본 변경이 아닌 간접 변경!</span></code></pre></div>\n<p>slice() 메서드가 간접 변경 메서드이기 때문에 원본이 변경 되지 않는다.\r\n따라서, ‘changed in copiedArr’가 아닌 ‘three’가 정답이다.</p>\n<br>\n<h3 id=\"06_types-part2js\" style=\"position:relative;\"><a href=\"#06_types-part2js\" aria-label=\"06_types part2js permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>06_Types-part2.js</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>arr <span class=\"token operator\">===</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n<span class=\"token punctuation\">}</span> <span class=\"token comment\">//false</span></code></pre></div>\n<p>참조 자료형인 배열, 객체, 함수는 주소를 변수에 할당하기 때문에 우리가 보기에 요소가 같더라도 실제로 heap에 저장되어 있는 값은 다르다는 것이다.\r\n이 부분에 대해 배우지 않았다면, 위 코드가 왜 틀렸는지 몰랐을 것이다.</p>\n<br>\n<h3 id=\"08_objectjs\" style=\"position:relative;\"><a href=\"#08_objectjs\" aria-label=\"08_objectjs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>08_Object.js</h3>\n<p>✨ <strong>깊은 복사와 얕은 복사</strong></p>\n<ul>\n<li><strong>Array.prototype.slice</strong> : 배열을 깔끔하게 복사할 때 사용.</li>\n</ul>\n<p>start와 end가 주어지지 않으면 전체 배열을 복사한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\r\n<span class=\"token keyword\">const</span> copyArr <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token function\">checker</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> copyArr<span class=\"token punctuation\">)</span> <span class=\"token comment\">//true</span>\r\n<span class=\"token function\">checker</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> copyArr<span class=\"token punctuation\">)</span> <span class=\"token comment\">//false</span></code></pre></div>\n<p>단점은..\r\n<strong>중첩 구조 복사를 제대로 수행할 수 없다</strong>.\r\n원본과 복사본 모두 영향을 받기 때문에 <strong>얕은 복사</strong>를 수행한다. 따라서, 모든 값을 독립적으로 복사할 수 없다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\r\n<span class=\"token keyword\">const</span> copyArr <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token function\">checker</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> copyArr<span class=\"token punctuation\">)</span> <span class=\"token comment\">//true</span>\r\n<span class=\"token function\">checker</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> copyArr<span class=\"token punctuation\">)</span> <span class=\"token comment\">//true</span></code></pre></div>\n<ul>\n<li><strong>Object.assign()</strong> : 객체를 복사할 때 사용.</li>\n</ul>\n<p>메서드의 첫번째 인수로 빈 객체를 넣어주며, 두번째 인수로 할당할 객체를 넣으면 된다.\r\n열거할 수 있는 하나 이상의 출처 객체로부터 대상 객체로 속성을 복사할 때 사용합니다. 대상 객체를 반환합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> game <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token constant\">AOS</span><span class=\"token operator\">:</span> <span class=\"token string\">\"League of Legend\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">const</span> game2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> Sim<span class=\"token operator\">:</span> <span class=\"token string\">\"DCS Worlds\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">const</span> game3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token constant\">VR</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Half-Life: Alyx\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">const</span> myGames <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span>game<span class=\"token punctuation\">,</span> game2<span class=\"token punctuation\">,</span> game3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\nmyGames <span class=\"token comment\">// {AOS: \"League of Legend\", Sim: \"DCS Worlds\", VR: \"Half-Life: Alyx\"}</span></code></pre></div>\n<p>단점은..\r\n<strong>2차원 객체는 깊은 복사가 이루어지지 않는다.</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\r\n  a<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\r\n  b<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n    c<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">const</span> newObj <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\nnewObj<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">.</span>c <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\r\n\r\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// { a: 1, b: { c: 3 } }</span>\r\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">.</span>c <span class=\"token operator\">===</span> newObj<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">.</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\r\n\r\n<span class=\"token comment\">// 전개 연산자</span>\r\n<span class=\"token keyword\">const</span> newObj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>obj <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n\r\nnewObj<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">.</span>c <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\r\n\r\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// { a: 1, b: { c: 3 } }</span>\r\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">.</span>c <span class=\"token operator\">===</span> newObj<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">.</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span></code></pre></div>\n<p>전개 연산자를 활용해도 2차원 객체는 얕은 복사가 되는 것을 확인할 수 있다.</p>\n<br>\n<blockquote>\n<p><strong>정리</strong></p>\n</blockquote>\n<p>✔️ 자바스크립트 핵심 개념과 주요 문법에 대해 이해할 수 있었다.</p>\n<p>✔️ 복습하며 완벽하게 아는 것이 중요하다.</p>","frontmatter":{"date":"July 13, 2022","title":"JavaScript Koans","categories":"codestates blog","author":"김예린","emoji":"🤑"},"fields":{"slug":"/2022-07-13-JavaScript-Koans-post.md/"}},"site":{"siteMetadata":{"siteUrl":"https://yelinz515.github.io","comments":{"utterances":{"repo":"yelinz515/blog-comments"}}}}},"pageContext":{"slug":"/2022-07-12/","nextSlug":"/2022-07-11/","prevSlug":"/2022-07-13-JavaScript-Koans-post.md/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}
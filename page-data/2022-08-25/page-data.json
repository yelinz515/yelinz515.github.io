{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/2022-08-25/",
    "result": {"data":{"cur":{"id":"97cfcdef-74cc-533e-8580-02cb2d1e4c00","html":"<p>Figma를 사용해서 기존 운영중인 서비스의 화면의 디자인을 따라서 만들어 보자.</p>\n<br>\n<h2 id=\"과제1---toss-앱-클론\" style=\"position:relative;\"><a href=\"#%EA%B3%BC%EC%A0%9C1---toss-%EC%95%B1-%ED%81%B4%EB%A1%A0\" aria-label=\"과제1   toss 앱 클론 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>과제1 - Toss 앱 클론</h2>\n<hr>\n<p>페어와 함께 토스 앱의 디자인을 따라해보았다. 따라하면서 어려웠던 부분, 부족한 부분, 느낀점에 대해 얘기해보려 한다.</p>\n<h3 id=\"어려웠던-내용-\" style=\"position:relative;\"><a href=\"#%EC%96%B4%EB%A0%A4%EC%9B%A0%EB%8D%98-%EB%82%B4%EC%9A%A9-\" aria-label=\"어려웠던 내용  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>어려웠던 내용 🤢</h3>\n<hr>\n<ul>\n<li><strong>오버레이로 창 띄우기(팝업창)</strong></li>\n</ul>\n<p><img src=\"/16a1e6babb66a6417326cc2da6d55c00/chart.png\" alt=\"github-blog.png\"></p>\n<p>주식에서 추가하기를 누르거나 오늘의 발견에서 하트를 누르면 아래와 같은 결과가 나와야 한다.</p>\n<p><img src=\"/97c529aef679a6b1ac67175aa9076548/chart_result.png\" alt=\"github-blog.png\"></p>\n<p>처음에 주식화면을 가져와 투명도 있는 검은 배경과 팝업을 추가했다. 문제는 Move in을 적용하면 검은 배경까지 이동하기 때문에 생각한 결과가 나오지 않았다.</p>\n<p>그래서 해결하기 위해 아래와 같이 팝업화면은 배경을 없애고 필요한 팝업창만 구현하였다. 그리고 주식 화면에서 <strong>Open overlay</strong>를 적용해 주식화면 위에 팝업을 띄우도록 바꿨다.</p>\n<p><img src=\"/59929666310178e5275c164559266993/chart2.png\" alt=\"github-blog.png\"></p>\n<p><img src=\"/9e82d183ddbf8a5fce2a1405084897a0/chart_overlay2.png\" alt=\"github-blog.png\"></p>\n<h3 id=\"\" style=\"position:relative;\"><a href=\"#\" aria-label=\" permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<ul>\n<li><strong>이미지 자동 넘기기</strong></li>\n</ul>\n<p>필요한 사진을 하나의 프레임으로 묶는다. 참고로 Clip content를 선택하면 프레임 상에서 어떤 이미지가 뜨는지 알 수 있다. 프레임을 필요한 만큼 복제해 해당 이미지가 나타날 수 있게 변경해준다. 후에 모든 프레임을 선택하여 Component 오른쪽 drop down을 클릭해 Create component set을 눌러준다.</p>\n<p>컴포넌트 안 각 이미지에 After delay를 적용해 change to로 <strong>다음 이미지</strong>로 넘어갈 수 있도록 설정해준다.</p>\n<p><img src=\"/1e41d290dee76eed999107249a16803b/after_delay.png\" alt=\"github-blog.png\"></p>\n<p><strong>결과 화면</strong></p>\n<p><img src=\"/ea5ed6e44012cde157833f3ee48d8897/ifood.gif\" alt=\"github-blog.png\"></p>\n<br>\n<h3 id=\"부족한-내용-\" style=\"position:relative;\"><a href=\"#%EB%B6%80%EC%A1%B1%ED%95%9C-%EB%82%B4%EC%9A%A9-\" aria-label=\"부족한 내용  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>부족한 내용 🧐</h3>\n<hr>\n<p>과제를 하면서 아쉬운 것들은 없다. 이틀에 걸쳐 만들었기 때문에 만들고 싶은 화면은 다 구현한 것 같다!</p>\n<br>\n<h3 id=\"느낀점-\" style=\"position:relative;\"><a href=\"#%EB%8A%90%EB%82%80%EC%A0%90-\" aria-label=\"느낀점  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>느낀점 🤠</h3>\n<hr>\n<p>Figma로 프로토타입을 구현하면서 실제와 비슷한 앱을 만들 수 있어서 좋았다. 프로토타입만 잘 작성해도 화면 구성과 사용자 흐름(user flow)을 개선함으로써 좋은 UI, 좋은 UX를 디자인할 수 있어 최종 결과물의 완성도를 향상시킬 수 있다는 것을 알게 되었다. 또한 프로젝트 기획 내용을 직관적으로 전달할 수 있어 내부 인원은 물론 프로젝트 외부 인원과의 소통에도 큰 도움이 될 것이라는 것도 알게 되었다.</p>\n<p>나중에 직접 프로젝트를 기획부터 시작할 일이 생긴다면, 기획 단계에서 완성도 있는 프로토타입을 만들기 위해 Figma를 익숙하게 다룰 수 있도록 열심히 연습해야 겠다.</p>\n<br>\n<h2 id=\"최종-결과물\" style=\"position:relative;\"><a href=\"#%EC%B5%9C%EC%A2%85-%EA%B2%B0%EA%B3%BC%EB%AC%BC\" aria-label=\"최종 결과물 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>최종 결과물</h2>\n<h4 id=\"prototype\" style=\"position:relative;\"><a href=\"#prototype\" aria-label=\"prototype permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Prototype</h4>\n<hr>\n<p><img src=\"/dc1dc8d9aa8751067fb4ebc56ebcb353/toss_wir.png\" alt=\"github-blog.png\"></p>\n<br>\n<h4 id=\"present\" style=\"position:relative;\"><a href=\"#present\" aria-label=\"present permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Present</h4>\n<hr>\n<p><img src=\"/33171202b6e7283f6616af59b7a018f3/toss_clone.gif\" alt=\"github-blog.png\"></p>","excerpt":"Figma를 사용해서 기존 운영중인 서비스의 화면의 디자인을 따라서 만들어 보자. 과제1 - Toss 앱 클론 페어와 함께 토스 앱의 디자인을 따라해보았다. 따라하면서 어려웠던 부분, 부족한 부분, 느낀점에 대해 얘기해보려 한다. 어려웠던 내용 🤢 오버레이로 창 띄우기(팝업창) github-blog.png 주식에서 추가하기를 누르거나 오늘의 발견에서 하트를 누르면 아래와 같은 결과가 나와야 한다. github-blog.png 처음에 주식화면을 가져와 투명도 있는 검은 배경과 팝업을 추가했다. 문제는 Move in을 적용하면 검은 배경까지 이동하기 때문에 생각한 결과가 나오지 않았다. 그래서 해결하기 위해 아래와 같이 팝업화면은 배경을 없애고 필요한 팝업창만 구현하였다. 그리고 주식 화면에서 Open overlay를 적용해 주식화면 위에 팝업을 띄우도록 바꿨다. github-blog.png github-blog.png  이미지 자동 넘기기 필요한 사진을 하나의 프레임으로 묶는다. 참…","frontmatter":{"date":"August 25, 2022","title":"Figma로 토스 앱 따라하기","categories":"codestates blog","author":"김예린","emoji":"🎨"},"fields":{"slug":"/2022-08-25/"}},"next":{"id":"11fba25d-8242-5f43-8a8c-e99cd1528fef","html":"<h3 id=\"-와이어프레임--프로토타입\" style=\"position:relative;\"><a href=\"#-%EC%99%80%EC%9D%B4%EC%96%B4%ED%94%84%EB%A0%88%EC%9E%84--%ED%94%84%EB%A1%9C%ED%86%A0%ED%83%80%EC%9E%85\" aria-label=\" 와이어프레임  프로토타입 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📱 와이어프레임 &#x26; 프로토타입</h3>\n<br>\n<h4 id=\"와이어프레임wireframe\" style=\"position:relative;\"><a href=\"#%EC%99%80%EC%9D%B4%EC%96%B4%ED%94%84%EB%A0%88%EC%9E%84wireframe\" aria-label=\"와이어프레임wireframe permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>와이어프레임(wireframe)</h4>\n<hr>\n<p>와이어프레임은 선(wire)으로 틀(frame)을 잡는다는 뜻으로, 제품 기획 단계에서 페이지를 어떻게 구성할 것인지 구조를 잡기위한 목적으로 만든다.</p>\n<br>\n<h4 id=\"프로토타입prototype\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%ED%86%A0%ED%83%80%EC%9E%85prototype\" aria-label=\"프로토타입prototype permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로토타입(prototype)</h4>\n<hr>\n<p>프로토타입은 실제 제품과 거의 흡사하게 구현한 것으로, 페이지 이동과 상호 작용이 가능합니다. 본격적으로 개발에 들어가기 전 단계에 작성하며, UI의 상호 작용을 시뮬레이션하는 것이 목적이다.</p>\n<br>\n<h4 id=\"차이점\" style=\"position:relative;\"><a href=\"#%EC%B0%A8%EC%9D%B4%EC%A0%90\" aria-label=\"차이점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>차이점</h4>\n<p>와이어프레임이나 프로토타입을 표현할 때 품질 수준을 전문용어로 <strong>피델리티(fidelity)</strong> 라고 표현한다.</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>와이어프레임</th>\n<th>프로토타입</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>작성시기</td>\n<td>기획 단계</td>\n<td>개발 전 단계</td>\n</tr>\n<tr>\n<td>작성목적</td>\n<td>화면 구조 설계</td>\n<td>UI 상호작용 시뮬레이션</td>\n</tr>\n<tr>\n<td>특징</td>\n<td>정적</td>\n<td>동적</td>\n</tr>\n<tr>\n<td>피델리티</td>\n<td>Low ~ Middle (High는 거의 작성하지 않음)</td>\n<td>Middle ~ High (Low는 테스트에 적합하지 않음)</td>\n</tr>\n</tbody>\n</table>\n<br>\r\n<br>\n<h3 id=\"-figma\" style=\"position:relative;\"><a href=\"#-figma\" aria-label=\" figma permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🎨 Figma</h3>\n<p>2016년 9월에 출시된 UI 디자인&#x26;프로토타이밍 툴</p>\n<p><img src=\"/367a645f120e9f11c52a1147071360cf/figma.png\" alt=\"github-blog.png\"></p>\n<br>\n<h4 id=\"figma-특징\" style=\"position:relative;\"><a href=\"#figma-%ED%8A%B9%EC%A7%95\" aria-label=\"figma 특징 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Figma 특징</h4>\n<hr>\n<p><strong>1. 실시간 협업 기능</strong></p>\n<p>Figma는 한 화면에서 여러 명의 사람이 동시에 작업할 수 있는 기능을 제공한다. 이러한 기능은 비대면 협업의 중요성이 높아지면서 Figma를 더욱 매력적인 툴로 만들었다.</p>\n<p><strong>2. 다양한 환경 지원</strong></p>\n<p>Figma는 웹 브라우저 기반 프로그램이기 때문에 브라우저만 사용할 수 있다면 어떤 환경에서든 사용이 가능하다. Mac, Window, Linux 등 다양한 OS 환경은 기기도 가리지 않는다. 필요에 따라 프로그램을 직접 설치해서 사용할 수도 있다.</p>\n<p><strong>3. 자동 저장 및 버전 관리</strong></p>\n<p>Figma는 자동 저장 기능을 제공한다. 그리고 누가 언제 무엇을 변경했는지 확인할 수 있는 히스토리 기능도 있어 버전 관리에도 유리하다.</p>\n<p><strong>4. 다양한 무료 폰트 지원</strong></p>\n<p>Figma는 구글 폰트를 활용할 수 있어 폰트를 별도로 설치할 필요가 없고, 폰트가 없어서 화면이 깨지는 현상도 발생하지 않는다. 또한, 구글 폰트 이외에도 사용자 PC에 저장된 로컬 폰트를 불러와서 사용할 수도 있다.</p>\n<p><strong>5. 오토 레이아웃 기능</strong></p>\n<p>Figma의 오토 레이아웃 기능을 사용하면 요소들 사이의 간격과 정렬에 규칙을 부여할 수 있고, 이 요소들의 크기가 변하더라도 부여한 규칙에 맞게 간격과 정렬을 유지할 수 있다.</p>\n<p><strong>6. 프로토타이핑</strong></p>\n<p>Figma에서 제공하는 프로토타입 기능을 활용하면 간단한 Lo-Fi 수준의 프로토타입부터 실제 화면과 거의 흡사한 Hi-Fi 수준의 프로토타입까지 제작할 수 있다.</p>\n<br>\n<h4 id=\"자주-사용하는-기능--단축키-모음\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EC%A3%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EA%B8%B0%EB%8A%A5--%EB%8B%A8%EC%B6%95%ED%82%A4-%EB%AA%A8%EC%9D%8C\" aria-label=\"자주 사용하는 기능  단축키 모음 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자주 사용하는 기능 &#x26; 단축키 모음</h4>\n<hr>\n<details>\r\n<summary>윈도우 키</summary>\r\n<div markdown=\"1\">       \r\n<br>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Mac</th>\n<th>Windows</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n<td>Command</td>\n<td>windows 키</td>\n</tr>\n<tr>\n<td></td>\n<td>option</td>\n<td>ALT</td>\n</tr>\n</tbody>\n</table>\n<br>\r\n</div>\r\n</details>\n<ul>\n<li>여러 요소 동시에 선택하기 : <code class=\"language-text\">Shift</code> 누른 상태로 클릭</li>\n<li>프레임으로 묶기 : <code class=\"language-text\">Command</code> + <code class=\"language-text\">Option</code> + <code class=\"language-text\">G</code></li>\n<li>그룹, 프레임 해제하기 : <code class=\"language-text\">Command</code> + <code class=\"language-text\">Shift</code> + <code class=\"language-text\">G</code></li>\n</ul>\n<p>Figma는 이 외에도 다양한 단축키를 제공한다. Figma 화면에서 <code class=\"language-text\">Control</code> + <code class=\"language-text\">Shift</code> + <code class=\"language-text\">?</code> 를 누르면 사용 가능한 모든 단축키를 확인할 수 있다.</p>\n<p><code class=\"language-text\">Command</code> 키가 아니라 <code class=\"language-text\">Control</code> 키라는 것을 잊지말자!</p>","frontmatter":{"date":"August 24, 2022","title":"Figma","categories":"codestates blog","author":"김예린","emoji":"🎨"},"fields":{"slug":"/2022-08-24/"}},"prev":{"id":"817bbd89-f54a-57cd-8a68-9f6ed336162f","html":"<h3 id=\"component-driven-development-cdd\" style=\"position:relative;\"><a href=\"#component-driven-development-cdd\" aria-label=\"component driven development cdd permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Component Driven Development (CDD)</h3>\n<blockquote>\n<p>디자인과 개발 단계에서부터 <strong>재사용</strong>할 수 있는, <strong>레고처럼 조립해 나갈 수 있는</strong> 부품 단위로 UI 컴포넌트를 만들어 나가는 개발</p>\n</blockquote>\n<br>\n<h3 id=\"css-in-js-ex-styled-component\" style=\"position:relative;\"><a href=\"#css-in-js-ex-styled-component\" aria-label=\"css in js ex styled component permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSS-in-JS (ex. Styled-Component)</h3>\n<blockquote>\n<p>기능적(Functional) 혹은 상태를 가진 컴포넌트들로부터 UI를 완전히 분리해 사용할 수 있는 아주 단순한 패턴을 제공</p>\n</blockquote>\n<h4 id=\"styled-components-문법\" style=\"position:relative;\"><a href=\"#styled-components-%EB%AC%B8%EB%B2%95\" aria-label=\"styled components 문법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Styled Components 문법</h4>\n<h4 id=\"1-컴포넌트-만들기\" style=\"position:relative;\"><a href=\"#1-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"1 컴포넌트 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 컴포넌트 만들기</h4>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> styled <span class=\"token keyword\">from</span> <span class=\"token string\">\"styled-components\"</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">const</span> 컴포넌트이름 <span class=\"token operator\">=</span> styled<span class=\"token punctuation\">.</span>태그종류<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\r\n    background: black;\r\n    color: white;\r\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> styled <span class=\"token keyword\">from</span> <span class=\"token string\">\"styled-components\"</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\">// const button1 = styled(재활용할 컴포넌트) 가능</span>\r\n<span class=\"token keyword\">const</span> button1 <span class=\"token operator\">=</span> styled<span class=\"token punctuation\">.</span>button<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\r\n    background: black;\r\n    color: white;\r\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4 id=\"2-props-활용하기\" style=\"position:relative;\"><a href=\"#2-props-%ED%99%9C%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"2 props 활용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Props 활용하기</h4>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> styled <span class=\"token keyword\">from</span> <span class=\"token string\">\"styled-components\"</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">const</span> button1 <span class=\"token operator\">=</span> styled<span class=\"token punctuation\">.</span>button<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\r\n    background: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> props<span class=\"token punctuation\">.</span>skyblue <span class=\"token operator\">?</span> <span class=\"token string\">\"skyblue\"</span> <span class=\"token operator\">:</span> props<span class=\"token punctuation\">.</span>color<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">;\r\n    color: white;\r\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\r\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\r\n      <span class=\"token operator\">&lt;</span>Button1<span class=\"token operator\">></span>Button1<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button1<span class=\"token operator\">></span>\r\n      <span class=\"token operator\">&lt;</span>Button1 skyblue<span class=\"token operator\">></span>Button1<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button1<span class=\"token operator\">></span>\r\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\r\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"\" style=\"position:relative;\"><a href=\"#\" aria-label=\" permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<ul>\n<li>\n<p>Props로 조건부 렌더링하기: <code class=\"language-text\">props.skyblue ? \"skyblue\" : \"pink\" </code></p>\n</li>\n<li>\n<p>Props 값으로 렌더링하기: <code class=\"language-text\">props.skyblue ? \"skyblue\" : props.color</code></p>\n</li>\n</ul>\n<h4 id=\"3-전역-스타일-설정하기\" style=\"position:relative;\"><a href=\"#3-%EC%A0%84%EC%97%AD-%EC%8A%A4%ED%83%80%EC%9D%BC-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0\" aria-label=\"3 전역 스타일 설정하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 전역 스타일 설정하기</h4>\n<hr>\n<h4 id=\"globalstylejs\" style=\"position:relative;\"><a href=\"#globalstylejs\" aria-label=\"globalstylejs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GlobalStyle.js</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createGlobalStyle <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"styled-components\"</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">const</span> GlobalStyle <span class=\"token operator\">=</span> createGlobalStyle<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\r\n\tbutton {\r\n\t\tpadding : 5px;\r\n    margin : 2px;\r\n    border-radius : 5px;\r\n\t}\r\n</span><span class=\"token template-punctuation string\">`</span></span></code></pre></div>\n<p><code class=\"language-text\">&lt;GlobalStyle></code> 컴포넌트를 최상위 컴포넌트에서 사용해주면 전역에 <code class=\"language-text\">&lt;GlobalStyle></code> 컴포넌트의 스타일이 적용된다.</p>\n<h4 id=\"appjs\" style=\"position:relative;\"><a href=\"#appjs\" aria-label=\"appjs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>App.js</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> GlobalStyle <span class=\"token keyword\">from</span> <span class=\"token string\">'./GlobalStyle'</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\r\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\r\n        <span class=\"token operator\">&lt;</span>GlobalStyle <span class=\"token operator\">/</span><span class=\"token operator\">></span>\r\n        <span class=\"token operator\">&lt;</span>button id<span class=\"token operator\">=</span><span class=\"token string\">\"practice\"</span><span class=\"token operator\">></span>Practice<span class=\"token operator\">!</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\r\n  <span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br>\n<h3 id=\"storybook\" style=\"position:relative;\"><a href=\"#storybook\" aria-label=\"storybook permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Storybook</h3>\n<blockquote>\n<p>Component Driven Development를 하기 위한 도구</p>\n</blockquote>\n<h4 id=\"지원하는-주요-기능\" style=\"position:relative;\"><a href=\"#%EC%A7%80%EC%9B%90%ED%95%98%EB%8A%94-%EC%A3%BC%EC%9A%94-%EA%B8%B0%EB%8A%A5\" aria-label=\"지원하는 주요 기능 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>지원하는 주요 기능</h4>\n<ul>\n<li>UI 컴포넌트들을 카탈로그화하기</li>\n<li>컴포넌트 변화를 Stories로 저장하기</li>\n<li>핫 모듈 재 로딩과 같은 개발 툴 경험을 제공하기</li>\n<li>리액트를 포함한 다양한 뷰 레이어 지원하기</li>\n</ul>\n<h4 id=\"튜토리얼\" style=\"position:relative;\"><a href=\"#%ED%8A%9C%ED%86%A0%EB%A6%AC%EC%96%BC\" aria-label=\"튜토리얼 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>튜토리얼</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">npx storybook init</code></pre></div>\n<p>이 명령어는 <code class=\"language-text\">package.json</code> 을 보고 사용 중인 프론트엔드 라이브러리에 맞는 Storybook 사용 환경을 알아서 만들어주기 때문에, 꼭 React가 아니더라도 다양한 프론트엔드 라이브러리에서 사용할 수 있다.</p>\n<br>\n<h3 id=\"useref\" style=\"position:relative;\"><a href=\"#useref\" aria-label=\"useref permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>useRef</h3>\n<p>React로 모든 개발 요구 사항을 충족할 수는 없다. 아래와 같이 <strong>DOM 엘리먼트의 주소값을 활용해야 하는 경우</strong> 특히 그렇다.</p>\n<ul>\n<li>focus</li>\n<li>text selection</li>\n<li>media playback</li>\n<li>애니메이션 적용</li>\n<li>d3.js, greensock 등 DOM 기반 라이브러리 활용</li>\n</ul>\n<p>아래 예시 코드처럼 <code class=\"language-text\">useRef</code> 로 DOM 노드, 엘리먼트, 그리고 React 컴포넌트 주소값을 참조할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">TextInputWithFocusButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token comment\">// const 주소값을_담는_그릇 = useRef(참조자료형)</span>\r\n  <span class=\"token keyword\">const</span> inputEl <span class=\"token operator\">=</span> <span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onButtonClick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n    inputEl<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span><span class=\"token function\">focus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\r\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\r\n    <span class=\"token punctuation\">{</span><span class=\"token comment\">/* &lt;input ref={주소값을_담는_그릇} type=\"text\" /> */</span><span class=\"token punctuation\">}</span>\r\n      <span class=\"token operator\">&lt;</span>input ref<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>inputEl<span class=\"token punctuation\">}</span> type<span class=\"token operator\">=</span><span class=\"token string\">\"text\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\r\n      <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>onButtonClick<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>Focus the input<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\r\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"date":"August 26, 2022","title":"[React] Custom Component","categories":"codestates blog","author":"김예린","emoji":null},"fields":{"slug":"/2022-08-26/"}},"site":{"siteMetadata":{"siteUrl":"https://yelinz515.github.io","comments":{"utterances":{"repo":"yelinz515/blog-comments"}}}}},"pageContext":{"slug":"/2022-08-25/","nextSlug":"/2022-08-24/","prevSlug":"/2022-08-26/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}
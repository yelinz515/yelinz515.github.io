{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/2022-08-17/",
    "result": {"data":{"cur":{"id":"035886a0-deb1-54cb-8259-47c92986b639","html":"<p>오늘 과제의 핵심은 server에서 데이터를 가져와 client에서 그 데이터를 보여주는 것이라고 생각한다.</p>\n<h3 id=\"server에서-데이터-가져오기-fetch-사용\" style=\"position:relative;\"><a href=\"#server%EC%97%90%EC%84%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0-fetch-%EC%82%AC%EC%9A%A9\" aria-label=\"server에서 데이터 가져오기 fetch 사용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>server에서 데이터 가져오기 (fetch 사용)</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span> discussions <span class=\"token punctuation\">,</span> setDiscussions <span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>isLoading<span class=\"token punctuation\">,</span> setIsLoading<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token function\">setIsLoading</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http://localhost:4000/discussions'</span><span class=\"token punctuation\">)</span>\r\n      <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n      <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token function\">setDiscussions</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\r\n      <span class=\"token function\">setIsLoading</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>처음 로딩화면을 실행하고, server에서 데이터를 가져오면 로딩화면을 보여주지 않게 작성했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\r\n        <span class=\"token punctuation\">{</span>isLoading <span class=\"token operator\">?</span> \r\n          <span class=\"token operator\">&lt;</span>LoadingIndicator <span class=\"token operator\">/</span><span class=\"token operator\">></span> <span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span>Discussions discussions<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>discussions<span class=\"token punctuation\">}</span><span class=\"token operator\">/</span><span class=\"token operator\">></span> \r\n        <span class=\"token punctuation\">}</span>\r\n  <span class=\"token punctuation\">)</span></code></pre></div>\n<p>만약 <code class=\"language-text\">isLoading</code>이 <strong>true</strong>이면 <code class=\"language-text\">&lt;LoadingIndicator /></code> 컴포넌트를 실행해 로딩 화면을 보여주고, <strong>false</strong>이면  <code class=\"language-text\">&lt;Discussions /></code> 컴포넌트를 실행하여 discussion list를 보여준다.</p>\n<h4 id=\"화면\" style=\"position:relative;\"><a href=\"#%ED%99%94%EB%A9%B4\" aria-label=\"화면 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>화면</h4>\n<p><strong>true</strong>\r\n<img src=\"/6ba64fecdf8cee51010a31f3cf9a8f0e/loading_agora.gif\" alt=\"Chinese Salty Egg\"></p>\n<p><strong>Result</strong>\r\n<img src=\"/55e7dc1b3d292d8882f6b4a83f10e171/discussion.gif\" alt=\"Chinese Salty Egg\"></p>","excerpt":"오늘 과제의 핵심은 server에서 데이터를 가져와 client에서 그 데이터를 보여주는 것이라고 생각한다. server에서 데이터 가져오기 (fetch 사용) 처음 로딩화면을 실행하고, server에서 데이터를 가져오면 로딩화면을 보여주지 않게 작성했다. 만약 이 true이면  컴포넌트를 실행해 로딩 화면을 보여주고, false이면   컴포넌트를 실행하여 discussion list를 보여준다. 화면 true\r\nChinese Salty Egg Result\r\nChinese Salty Egg","frontmatter":{"date":"August 17, 2022","title":"my-agora-states-server","categories":"codestates blog","author":"김예린","emoji":null},"fields":{"slug":"/2022-08-17/"}},"next":{"id":"64bcd7c2-d90b-5095-a79c-e80bd6e19bce","html":"<p>Express 프레임워크로 StatesAirline API Server 구현하는 과제를 해보았다.</p>\n<h3 id=\"-과제-시작-전\" style=\"position:relative;\"><a href=\"#-%EA%B3%BC%EC%A0%9C-%EC%8B%9C%EC%9E%91-%EC%A0%84\" aria-label=\" 과제 시작 전 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✅ 과제 시작 전</h3>\n<p>Express 공식문서에서 <code class=\"language-text\">req.query</code> , <code class=\"language-text\">req.params</code>를 사용하는 방법을 확인할 것이다.</p>\n<h4 id=\"reqquery\" style=\"position:relative;\"><a href=\"#reqquery\" aria-label=\"reqquery permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>req.query</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// localhost:3000/topic?id=1&amp;name=foo</span>\r\napp<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/topic'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">.</span>id <span class=\"token operator\">+</span> <span class=\"token string\">','</span> <span class=\"token operator\">+</span> req<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>위 코드는 id과 name 값을 동시에 가져올 수 있다. <code class=\"language-text\">localhost:3000/topic?id=1&amp;name=foo</code> 에 들어간다고 가정하자. 화면에 <code class=\"language-text\">1,foo</code> 가 보일 것이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// localhost:3000/topic?id=1</span>\r\napp<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/topic'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">var</span> topics <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\r\n        <span class=\"token string\">'JavaScript is ....'</span><span class=\"token punctuation\">,</span>\r\n        <span class=\"token string\">'Nodejs is ....'</span><span class=\"token punctuation\">,</span>\r\n        <span class=\"token string\">'Express is ....'</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>topics<span class=\"token punctuation\">[</span>req<span class=\"token punctuation\">,</span>query<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>위 코드는 배열로 값들을 가져온다. <code class=\"language-text\">localhost:3000/topic?id=1</code> 에 들어간다고 가정하면, id가 1이기 때문에<code class=\"language-text\"> topic[1]</code>인 <code class=\"language-text\">Nodejs is....</code>가 화면에 보인다.</p>\n<p>실제로는 <code class=\"language-text\">topics</code>에 파일이나 데이터베이스로 교체해서 짧은 코드로 값을 가져올 것이다.</p>\n<h4 id=\"reqparams\" style=\"position:relative;\"><a href=\"#reqparams\" aria-label=\"reqparams permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>req.params</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//localhost:3000/page/CSS</span>\r\napp<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'page/:pageId'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-text\">localhost:3000/page/CSS</code>에 들어간다고 하면 아래와 같은 결과가 나올 것이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span><span class=\"token string\">\"pageId : \"</span><span class=\"token constant\">CSS</span>\"<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">req.params</code>안에는 객체가 들어가 있고, 그 객체의 <strong>pageId</strong> 프로퍼티 값을 통해서 <strong>CSS</strong>라는 값을 가져온다는 뜻이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//localhost:3000/page/CSS/WEB</span>\r\napp<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'page/:pageId/:chaperId'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span><span class=\"token string\">\"pageId\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"CSS\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"chaperId\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"WEB\"</span><span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"-statesairline-server수정\" style=\"position:relative;\"><a href=\"#-statesairline-server%EC%88%98%EC%A0%95\" aria-label=\" statesairline server수정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✅ StatesAirline-Server(수정)</h3>\n<ul>\n<li><code class=\"language-text\">app.use</code>의 위치가 굉장히 중요하다.</li>\n<li><code class=\"language-text\">req.query</code> -> 쿼리 파라미터</li>\n<li><code class=\"language-text\">req.params</code> -> path 파라미터</li>\n</ul>\n<h4 id=\"flightcontrollerjs\" style=\"position:relative;\"><a href=\"#flightcontrollerjs\" aria-label=\"flightcontrollerjs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>flightController.js</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> flights <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'../repository/flightList'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">const</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'../app'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token comment\">// [GET] /flight</span>\r\n  <span class=\"token comment\">// 요청 된 파라미터 departure_times, arrival_times 값과 동일한 값을 가진 항공편 데이터를 조회합니다.</span>\r\n  <span class=\"token comment\">// 요청 된 파라미터 departure, destination 값과 동일한 값을 가진 항공편 데이터를 조회합니다.</span>\r\n  <span class=\"token function-variable function\">findAll</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> departure_times<span class=\"token punctuation\">,</span> arrival_times<span class=\"token punctuation\">,</span> destination<span class=\"token punctuation\">,</span> departure <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">;</span>\r\n    <span class=\"token comment\">// TODO:</span>\r\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>departure_times <span class=\"token operator\">&amp;&amp;</span> arrival_times<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n      <span class=\"token keyword\">const</span> filtered <span class=\"token operator\">=</span> flights<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">return</span> item<span class=\"token punctuation\">.</span>departure_times <span class=\"token operator\">===</span> departure_times <span class=\"token operator\">&amp;&amp;</span> item<span class=\"token punctuation\">.</span>arrival_times <span class=\"token operator\">===</span> arrival_times<span class=\"token punctuation\">;</span>\r\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\r\n      <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span>filtered<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>destination <span class=\"token operator\">&amp;&amp;</span> departure<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n      <span class=\"token keyword\">const</span> filtered <span class=\"token operator\">=</span> flights<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">return</span> item<span class=\"token punctuation\">.</span>destination <span class=\"token operator\">===</span> destination <span class=\"token operator\">&amp;&amp;</span> item<span class=\"token punctuation\">.</span>departure <span class=\"token operator\">===</span> departure<span class=\"token punctuation\">;</span>\r\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\r\n      <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span>filtered<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span>flights<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token comment\">// [GET] /flight/:uuid</span>\r\n  <span class=\"token comment\">// 요청 된 uuid 값과 동일한 uuid 값을 가진 항공편 데이터를 조회합니다.</span>\r\n  <span class=\"token function-variable function\">findById</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> uuid <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">;</span>\r\n    <span class=\"token comment\">// TODO:</span>\r\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>uuid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n      <span class=\"token keyword\">const</span> filtered <span class=\"token operator\">=</span> flights<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">return</span> item<span class=\"token punctuation\">.</span>uuid <span class=\"token operator\">===</span> uuid<span class=\"token punctuation\">;</span>\r\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\r\n      <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span>filtered<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n\r\n  <span class=\"token comment\">// Advanced</span>\r\n  <span class=\"token comment\">// [PUT] /flight/:uuid 요청을 수행합니다.</span>\r\n  <span class=\"token comment\">// 요청 된 uuid 값과 동일한 uuid 값을 가진 항공편 데이터를 요쳥 된 Body 데이터로 수정합니다.</span>\r\n  <span class=\"token function-variable function\">update</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> uuid <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">const</span> bodyData <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">;</span>\r\n    <span class=\"token comment\">// req.body는 default 값으로 Undefined 설정되기 때문에 json parser를 해야한다.</span>\r\n     <span class=\"token comment\">// TODO</span>\r\n     <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>uuid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n      <span class=\"token keyword\">const</span> filtered <span class=\"token operator\">=</span> flights<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">return</span> item<span class=\"token punctuation\">.</span>uuid <span class=\"token operator\">===</span> uuid<span class=\"token punctuation\">;</span>\r\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\r\n      <span class=\"token comment\">// filtered[0]해준 이유는 filtered는 '하나의 객체를 가지고 있는 배열'이기 때문이다</span>\r\n      <span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span>filtered<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> bodyData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//filtered[0] + bodyData</span>\r\n        <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n  <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n\r\n      <span class=\"token comment\">// filtered = [{\"arrival_times\": \"2021-12-04T12:00:00\", </span>\r\n      <span class=\"token comment\">// \"departure\": \"CJU\", \"departure_times\": \"2021-12-03T12:00:00\", </span>\r\n      <span class=\"token comment\">// \"destination\": \"ICN\", </span>\r\n      <span class=\"token comment\">// \"uuid\": \"af6fa55c-da65-47dd-af23-578fdba99bed\"}]</span></code></pre></div>\n<h4 id=\"bookcontrollerjs\" style=\"position:relative;\"><a href=\"#bookcontrollerjs\" aria-label=\"bookcontrollerjs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>bookController.js</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// POST /book에서 사용할 uuid입니다.</span>\r\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> v4<span class=\"token operator\">:</span> uuid <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'uuid'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token comment\">// 항공편 예약 데이터를 저장합니다.</span>\r\n<span class=\"token keyword\">let</span> booking <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n\r\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token comment\">// [GET] /book 요청을 수행합니다.</span>\r\n  <span class=\"token comment\">// 전체 예약 데이터를 조회합니다.</span>\r\n  <span class=\"token function-variable function\">findAll</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span>booking<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token comment\">// [GET] /book/:phone 요청을 수행합니다.2</span>\r\n  <span class=\"token comment\">// 요청 된 phone과 동일한 phone 예약 데이터를 조회합니다.</span>\r\n  <span class=\"token function-variable function\">findByPhone</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>phone<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">;</span>\r\n    <span class=\"token comment\">// TODO</span>\r\n    <span class=\"token comment\">// router.get('/:phone', findByPhone);</span>\r\n    <span class=\"token keyword\">let</span> list <span class=\"token operator\">=</span> booking<span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>phone<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n      list <span class=\"token operator\">=</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">return</span> item<span class=\"token punctuation\">.</span>phone <span class=\"token operator\">===</span> phone\r\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n      <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token comment\">// [GET] /book/:phone/:flight_uuid 요청을 수행합니다.3</span>\r\n  <span class=\"token comment\">// 요청 된 id, phone과 동일한 uuid, phone 예약 데이터를 조회합니다.</span>\r\n  <span class=\"token function-variable function\">findByPhoneAndFlightId</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span>res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>phone<span class=\"token punctuation\">,</span> flight_uuid<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">;</span>\r\n    <span class=\"token comment\">// TODO:</span>\r\n    <span class=\"token comment\">//router.get('/:phone/:flight_uuid', findByPhoneAndFlightId);</span>\r\n\r\n    <span class=\"token keyword\">let</span> list <span class=\"token operator\">=</span> booking<span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>flight_uuid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n      list <span class=\"token operator\">=</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">return</span> item<span class=\"token punctuation\">.</span>flight_uuid <span class=\"token operator\">===</span> flight_uuid<span class=\"token punctuation\">;</span>\r\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\r\n      res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>phone<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n      list <span class=\"token operator\">=</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">return</span> item<span class=\"token punctuation\">.</span>phone <span class=\"token operator\">===</span> phone<span class=\"token punctuation\">;</span>\r\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\r\n      res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token comment\">// [POST] /book 요청을 수행합니다.</span>\r\n  <span class=\"token comment\">// 요청 된 예약 데이터를 저장합니다.1</span>\r\n  <span class=\"token comment\">// router.post('/', create);</span>\r\n  <span class=\"token function-variable function\">create</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token comment\">// POST /book에서 사용할 booking_uuid입니다.</span>\r\n    <span class=\"token keyword\">const</span> booking_uuid <span class=\"token operator\">=</span> <span class=\"token function\">uuid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token comment\">// TODO:</span>\r\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>booking_uuid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n      booking<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> \r\n  <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>","frontmatter":{"date":"August 16, 2022","title":"StatesAirline API Server","categories":"codestates blog","author":"김예린","emoji":null},"fields":{"slug":"/2022-08-16/"}},"prev":{"id":"5f1d0ef1-a573-5ce4-9e6d-f45720f65867","html":"<h3 id=\"목표\" style=\"position:relative;\"><a href=\"#%EB%AA%A9%ED%91%9C\" aria-label=\"목표 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>목표</h3>\n<details>\r\n<summary>목표 리스트</summary>\r\n<div markdown=\"1\">       \r\n<br>\n<ul>\n<li>꾸준한 자기주도적 학습</li>\n<li>고연봉 받는 개발자</li>\n<li>T자로 커리어 관리 <strong>🚀</strong></li>\n</ul>\n<br>\r\n</div>\r\n</details>\n<br>\n<h3 id=\"keep-만족스러운-부분-계속-이어가면-좋을-부분\" style=\"position:relative;\"><a href=\"#keep-%EB%A7%8C%EC%A1%B1%EC%8A%A4%EB%9F%AC%EC%9A%B4-%EB%B6%80%EB%B6%84-%EA%B3%84%EC%86%8D-%EC%9D%B4%EC%96%B4%EA%B0%80%EB%A9%B4-%EC%A2%8B%EC%9D%84-%EB%B6%80%EB%B6%84\" aria-label=\"keep 만족스러운 부분 계속 이어가면 좋을 부분 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>Keep: 만족스러운 부분, 계속 이어가면 좋을 부분</strong></h3>\n<hr>\n<p>\n<p>✔️ <strong>Section1_Keep: 블로그 작성하기 ➡️ Section2_Keep 1</strong></p>\n<p>최근 Jekyll에서 Gatsby로 블로그 마이그레이션을 하다가 매일 채워지는 잔디를 몇 개 잃었다.😮‍💨 처음하는 작업이다보니까 실수도 많았던 것 같다.</p>\n<p>개발한 내용을 하나의 완결된 아티클로 적는 경험은 관련 지식을 머릿속에 명확하게 정리해주고, 기억에 오래 남게 해준다. 블로그를 작성하는 부분은 잘 지켜나가고 있다고 생각하기 때문에, 앞으로도 쭉~ 블로그를 작성하자.</p>\n<h3 id=\"\" style=\"position:relative;\"><a href=\"#\" aria-label=\" permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>✔️ <strong>Keep 2: 자기주도적 학습</strong></p>\n<p>프로그래머 직군의 가장 큰 특성 중 하나는 ‘배움에 끝이 없다’라는 것이다. 매년 프레임워크나 새로운 언어체계등 새로운 기술들이 등장하고 업데이트 되는 개발자들의 직업환경에서, 기존의 개발업무와 동시에 전혀 다른 문법의 언어를 습득하려면 효율적인 학습을 해야한다.</p>\n<p>이 부분에 있어서 나름 꾸준히 잘하고 있다고 생각한다. 지금은 몇 시간 공부하는지보다 매일 꾸준히 공부하고 있는지가 가장 중요한 것 같다. 수업 끝나고 복습하거나 새로운 지식을 공부하는데, 문제를 해결할 방법을 이해하려고 노력하고 있다. 앞으로의 학습 하는 데에 있어서 좋은 영향 주는 것을 알기 때문에 꾸준한 학습을 이어나가자.</p>\n<br>\n<h3 id=\"problem-개선이-필요하다고-생각되는-부분\" style=\"position:relative;\"><a href=\"#problem-%EA%B0%9C%EC%84%A0%EC%9D%B4-%ED%95%84%EC%9A%94%ED%95%98%EB%8B%A4%EA%B3%A0-%EC%83%9D%EA%B0%81%EB%90%98%EB%8A%94-%EB%B6%80%EB%B6%84\" aria-label=\"problem 개선이 필요하다고 생각되는 부분 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>Problem: 개선이 필요하다고 생각되는 부분</strong></h3>\n<hr>\n<p>\n<p>✔️ <strong>Problem 1: 커뮤니티에 질문하기</strong></p>\n<p>페어 프로그래밍을 하면서 어려운 문제에 직면했을 때 페어와 함께 해결하려고 노력했다. Section1에 비해 페어 프로그래밍을 어떻게 해야하는지에 대해 많이 익숙해졌고, 동기들과 소통할 공간도 많아져 자유롭게 질문할 수 있었다.</p>\n<p>그럼에도 불구하고, Problem1에 적은 이유는 좀 더 적극적으로 커뮤니티를 활용해 질문해야겠다고 생각이 들었다.</p>\n<p>앞으로 아고라 스테이츠나 디스코드를 통해 동료와 크루분들께 정리된 항목으로 질문하는 습관을 기르자.</p>\n<h3 id=\"-1\" style=\"position:relative;\"><a href=\"#-1\" aria-label=\" 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>✔️ <strong>Problem 2: 스터디 참여하기</strong></p>\n<p>더 열심히 공부하기 위해 노션에 스터디가 열리면 꼭 참여해야겠다🤤 다른 사람들과 소통하면서 공부하며 더 좋은 실력을 갖는 것이 목표이다.</p>\n<h3 id=\"-2\" style=\"position:relative;\"><a href=\"#-2\" aria-label=\" 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>✔️ <strong>Problem 3: 프로젝트 만들어보기</strong></p>\n<p>경험을 위해 작은 프로젝트부터 만들어봐야겠다. 자주 만들어보면 실력이 향상되어 있지 않을까 생각이 든다…</p>\n<br>\n<h3 id=\"try-keep과-problem을-기반으로-실천해-보고자-하는-것\" style=\"position:relative;\"><a href=\"#try-keep%EA%B3%BC-problem%EC%9D%84-%EA%B8%B0%EB%B0%98%EC%9C%BC%EB%A1%9C-%EC%8B%A4%EC%B2%9C%ED%95%B4-%EB%B3%B4%EA%B3%A0%EC%9E%90-%ED%95%98%EB%8A%94-%EA%B2%83\" aria-label=\"try keep과 problem을 기반으로 실천해 보고자 하는 것 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>Try: Keep과 Problem을 기반으로 실천해 보고자 하는 것</strong></h3>\n<hr>\n<br>\n<details>\r\n<summary>📌 Try 작성법</summary>\r\n<div markdown=\"1\">       \r\n<br>\r\n(keep 중에 반드시 유지하고 싶거나, 더 잘하고 싶은 것 / Problem을 해결하기 위한 실천)\r\n<br>\r\n</div>\r\n</details>\n<br>\r\n<br>\n<table>\n<thead>\n<tr>\n<th align=\"center\">🧐 <strong>Keep</strong></th>\n<th align=\"center\"><strong>🤫 Problem</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">블로그 작성하기</td>\n<td align=\"center\">프로젝트 만들어보기</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"-3\" style=\"position:relative;\"><a href=\"#-3\" aria-label=\" 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>🧐 <strong>Try 1:</strong>\r\n사람들이 읽기에 지루한 글이라고 생각이 들었다. 그날 내가 공부한 내용을 정리하는 블로그를 주로 작성하기 때문에 특색이 없는 글이라 느껴진다.</p>\n<p>개발하며 가진 고민을 주제로 해결하는 과정을 서론, 본론, 결론을 작성할 것이다. 같은 문제를 놓고도 사람들마다 고민과 해결 방법이 다르기 때문에 글 쓴 사람의 개성이 잘 드러날 수밖에 없다. 앞으로 블로그에 글을 올릴 때 책임감을 갖고 블로그를 통해 성장하자!</p>\n<h3 id=\"-4\" style=\"position:relative;\"><a href=\"#-4\" aria-label=\" 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>🧐 <strong>Try 2:</strong>\r\n지금까지 배웠던 내용을 복습하고, Redux를 공부한 다음 클론 코딩을 통해 내가 자주 사용했던 서비스들을 제작해보고, 코딩 실력도 비약적으로 상승했으면 좋겠다. 내가 원하는 웹사이트도 크게 제작해보고 더 좋은 실력을 가진 개발자가 되자!</p>\n<p>⭐ 지금보다 많이 달라진 모습으로 <code class=\"language-text\">Section3</code> 회고를 작성하길 바란다.⭐</p>","frontmatter":{"date":"August 18, 2022","title":"Section 2 회고","categories":"codestates blog","author":"김예린","emoji":null},"fields":{"slug":"/2022-08-18/"}},"site":{"siteMetadata":{"siteUrl":"https://yelinz515.github.io","comments":{"utterances":{"repo":"yelinz515/blog-comments"}}}}},"pageContext":{"slug":"/2022-08-17/","nextSlug":"/2022-08-16/","prevSlug":"/2022-08-18/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}
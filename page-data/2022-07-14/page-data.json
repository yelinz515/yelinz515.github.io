{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/2022-07-14/",
    "result": {"data":{"cur":{"id":"40a452b3-947c-5f49-b6bc-40002dcd9452","html":"<br>\n<h2 id=\"domdocument-object-model\" style=\"position:relative;\"><a href=\"#domdocument-object-model\" aria-label=\"domdocument object model permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DOM(Document Object Model)</h2>\n<p>JS를 사용할 수 있으면, DOM으로 HTML을 조작할 수 있습니다. DOM이라는 구조를 기반으로, JavaScript로 프로그램을 작성하여 HTML을 조작합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">✨ &lt;script> 요소를 추가하는 두 가지 방법</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  1. &lt;head> 요소에 추가하는 방법\r\n  2. &lt;/body> 가 끝나기 전에 추가하는 방법</code></pre></div>\n<h4 id=\"dom-구조-조회\" style=\"position:relative;\"><a href=\"#dom-%EA%B5%AC%EC%A1%B0-%EC%A1%B0%ED%9A%8C\" aria-label=\"dom 구조 조회 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DOM 구조 조회</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">console.dir(document.body) // DOM을 객체의 모습으로 출력</code></pre></div>\n<h4 id=\"부모-요소에서-첫-자식-요소-조회\" style=\"position:relative;\"><a href=\"#%EB%B6%80%EB%AA%A8-%EC%9A%94%EC%86%8C%EC%97%90%EC%84%9C-%EC%B2%AB-%EC%9E%90%EC%8B%9D-%EC%9A%94%EC%86%8C-%EC%A1%B0%ED%9A%8C\" aria-label=\"부모 요소에서 첫 자식 요소 조회 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>부모 요소에서 첫 자식 요소 조회</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">console.dir(document.body.children[1])</code></pre></div>\n<br>\n<h2 id=\"crudcreate-read-update-delete\" style=\"position:relative;\"><a href=\"#crudcreate-read-update-delete\" aria-label=\"crudcreate read update delete permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CRUD(Create, Read, Update, Delete)</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const tweetSelf = document.createElement('div') // div 생성\r\ndocument.body.append(tweetSelf) // body에 추가</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">//id = container에 생성한 tweetSelf 요소를 추가\r\nconst container = document.querySelector('#container')\r\ncontainer.append(tweetSelf)</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">tweetSelf.classList.add('tweet') // 클래스 이름 추가\r\ntweetSelf.textContent = 'self create'; // 실제 보여질 콘텐츠 내용 추가\r\n\r\ntweetSelf.remove() // 마지막으로 삭제</code></pre></div>\n<br>\n<h2 id=\"이벤트-객체\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EA%B0%9D%EC%B2%B4\" aria-label=\"이벤트 객체 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이벤트 객체</h2>\n<p>함수를 작성하면 함수를 여러 번 재사용할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> menus <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"button\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//모든 버튼을 가져옵니다.</span>\r\n\r\n<span class=\"token keyword\">let</span> btnAmericano <span class=\"token operator\">=</span> menus<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">let</span> btnCaffelatte <span class=\"token operator\">=</span> menus<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n\r\nbtnAmericano<span class=\"token punctuation\">.</span>onclick <span class=\"token operator\">=</span> handleClick<span class=\"token punctuation\">;</span>\r\nbtnCaffelatte<span class=\"token punctuation\">.</span>onclick <span class=\"token operator\">=</span> handleClick<span class=\"token punctuation\">;</span> <span class=\"token comment\">// for 문으로도 충분히 구현할 수 있는 내용입니다.</span>\r\n\r\n<span class=\"token keyword\">function</span> <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token comment\">// 아래의 빈칸(____)을 채우세요.</span>\r\n  <span class=\"token keyword\">let</span> currentMenu <span class=\"token operator\">=</span> ____<span class=\"token punctuation\">;</span> <span class=\"token comment\">// TODO</span>\r\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>currentMenu <span class=\"token operator\">+</span> <span class=\"token string\">\"를 클릭하셨습니다.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>함수에 어떤 메뉴를 추가해도 menus 버튼을 누르면 모두 실행된다.\r\n그렇다면..\r\n사용자가 누른 버튼에 따라 출력되는 메뉴가 다르게 보이기 위한 코드는 무엇인가?</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token comment\">// 아래의 빈칸(____)을 채우세요.</span>\r\n  <span class=\"token keyword\">let</span> currentMenu <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>textContent<span class=\"token punctuation\">;</span> <span class=\"token comment\">// TODO</span>\r\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>currentMenu <span class=\"token operator\">+</span> <span class=\"token string\">\"를 클릭하셨습니다.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>위 빈칸에 event.target.textContent로 적어주면 된다.</p>\n<p>이벤트 함수에 매개변수로 event를 넣으면 여러 event를 한 번에 할당할 수 있다.\r\nevent.target은 실행된 event가 발생한 곳의 객체 주소를 담고 있다.</p>\n<br>\n<h3 id=\"onclick과-addeventlister의-차이점\" style=\"position:relative;\"><a href=\"#onclick%EA%B3%BC-addeventlister%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90\" aria-label=\"onclick과 addeventlister의 차이점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>onclick과 addEventLister의 차이점</h3>\n<p>onclick : 마지막 하나만 실행. 옛날 방식\r\naddEventListener: 하나하나 차례대로 다 실행. 최근 더 많이 사용됨</p>\n<br>\n<hr>\n<h4 id=\"종합퀴즈-오답노트\" style=\"position:relative;\"><a href=\"#%EC%A2%85%ED%95%A9%ED%80%B4%EC%A6%88-%EC%98%A4%EB%8B%B5%EB%85%B8%ED%8A%B8\" aria-label=\"종합퀴즈 오답노트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>&#x3C;종합퀴즈 오답노트></h4>\n<br>\n<p><strong>✅ 9.</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">displayAlert</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'코드스테이츠에 오신 것을 환영합니다'</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">}</span>\r\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#apply'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>onclick <span class=\"token operator\">=</span> <span class=\"token function\">displayAlert</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// displayAlert() X</span></code></pre></div>\n<p>⚠️ 함수를 할당할 시에 함수의 실행 값을 할당하면 안됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">displayAlert</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'코드스테이츠에 오신 것을 환영합니다'</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">}</span>\r\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#apply'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>onclick <span class=\"token operator\">=</span> displayAlert <span class=\"token comment\">// displayAlert() O</span></code></pre></div>\n<p>위 처럼 <strong>함수 그 자체</strong>를 할당해야 한다.</p>\n<br>\n<p><strong>✅ 7.</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">✨ Q. aElement를 HTML에서 제거하기 위한 방법?</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">let aElement = document.createElement('a')\r\naElement.setAttribute('id', 'javascript') \r\naElement.textContent = 'awesome'</code></pre></div>\n<p>여기서</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">setAttribute(name, value)</code></pre></div>\n<p>name: 값을 설정할 속성의 이름을 지정\r\nvalue: 속성에 할당할 값</p>\n<p>그래서 id가 javascript라는 뜻이다.</p>\n<br>\n<p><strong>보기:</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"h\"><pre class=\"language-h\"><code class=\"language-h\">//오답\r\nA. document.deleteNode(aElement) //deleteNode라는 메서드 없음\r\n\r\n//C와 D는 world 엘리먼트를 전부 지움\r\nC. document.querySelector(&quot;#world&quot;).remove()\r\nD. document.querySelector(&quot;#world&quot;).remove(aElement)</code></pre></div>\n<p>정답은..</p>\n<div class=\"gatsby-highlight\" data-language=\"h\"><pre class=\"language-h\"><code class=\"language-h\">B. aElement.remove() //aElement 제거\r\nE. document.querySelector(&quot;#world&quot;).removeChild(aElement) //world 엘리먼트의 자식 요소인 aElement 제거</code></pre></div>\n<br>\n<p><strong>✅ 3.</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">✨ Q. &lt;div>요소를 전부 조회하는 방법?</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;body>\r\n   &lt;div>\r\n    &lt;div>hello&lt;/div>\r\n    &lt;div>world&lt;/div>\r\n    &lt;span>code&lt;/span>\r\n    &lt;span>states&lt;/span>\r\n  &lt;/div>\r\n&lt;/body></code></pre></div>\n<br>\n<p><strong>보기</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// 오답\r\nA. document.querySelector('div') // 최상단 &lt;div>요소 하나만 조회\r\nC. document.getElementById('div') // id가 &lt;div>요소 하나를 조회\r\nE. document.getElementsByClassName('div') // class가 &lt;div>요소 여러 개를 조회합니다.</code></pre></div>\n<p>정답은..</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">B. document.getElementsByTagName('div') // tag가 &lt;div>요소 여러 개를 조회합니다.\r\nD. document.querySelectorAll('div') // &lt;div>요소 모두 조회</code></pre></div>\n<br>\n<blockquote>\n<p>그렇다면..</p>\n</blockquote>\n<p><strong>✨ Q. 위 HTML에서 <code class=\"language-text\">&lt;div></code>요소를 조회하였다면, 조회한 <code class=\"language-text\">&lt;div></code> 개수는?</strong></p>\n<p><strong>부모, 자식 관계와 관계 없이</strong> 모든 div 요소를 선택하기 때문에 총 3개이다.</p>","excerpt":"DOM(Document Object Model) JS를 사용할 수 있으면, DOM으로 HTML을 조작할 수 있습니다. DOM이라는 구조를 기반으로, JavaScript로 프로그램을 작성하여 HTML을 조작합니다. DOM 구조 조회 부모 요소에서 첫 자식 요소 조회 CRUD(Create, Read, Update, Delete) 이벤트 객체 함수를 작성하면 함수를 여러 번 재사용할 수 있다. 함수에 어떤 메뉴를 추가해도 menus 버튼을 누르면 모두 실행된다.\r\n그렇다면..\r\n사용자가 누른 버튼에 따라 출력되는 메뉴가 다르게 보이기 위한 코드는 무엇인가? 위 빈칸에 event.target.textContent로 적어주면 된다. 이벤트 함수에 매개변수로 event를 넣으면 여러 event를 한 번에 할당할 수 있다.\r\nevent.target은 실행된 event가 발생한 곳의 객체 주소를 담고 있다. onclick과 addEventLister의 차이점 onclick : 마지막 하나만 실행…","frontmatter":{"date":"July 14, 2022","title":"[4주차] [JS/브라우저] DOM - 4일차","categories":"codestates blog","author":"김예린","emoji":null},"fields":{"slug":"/2022-07-14/"}},"next":{"id":"2e6b67a7-24d4-562c-845e-a1339b14c251","html":"<h3 id=\"01_introductionjs\" style=\"position:relative;\"><a href=\"#01_introductionjs\" aria-label=\"01_introductionjs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>01_Introduction.js</h3>\n<p>✨ <strong>expect</strong> 함수</p>\n<blockquote>\n<p><strong>테스트하는 값과 기대값을 비교</strong></p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">expect</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">.</span><span class=\"token function\">equal</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'sum(1, 2)의 결과값은 3과 같아야(equal) 한다'</span></code></pre></div>\n<br>\n<h3 id=\"04_scopejs\" style=\"position:relative;\"><a href=\"#04_scopejs\" aria-label=\"04_scopejs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>04_Scope.js</h3>\n<p>✨ 함수 선언식(declaration)과 함수 표현식(expression)의 차이</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">funcDeclared</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">return</span> <span class=\"token string\">'this is a function declaration'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> funDeclared<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 'function'</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function-variable function\">funcExpressed</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">return</span> <span class=\"token string\">'this is a function expression'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n\r\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> funExpressed<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 'string'</span></code></pre></div>\n<p>✨ 자바스크립트 함수 호이스팅(hoisting)</p>\n<p><strong>인터프리터가 변수와 함수의 메모리 공간을 선언 전에 미리 할당하는 것</strong></p>\n<p>“변수의 선언과 초기화를 분리한 후, 선언만 코드의 최상단으로 옮기는 것” 이라고 주로 설명할 수 있다.</p>\n<p>✨ lexical scope\r\n자바스크립트는 함수가 호출되는 환경와 별개로, 기존에 선언되어 있던 환경 - 어휘적 환경 - 을 기준으로 변수를 조회하려고 함.</p>\n<br>\n<h3 id=\"05_arrowfunctionjs\" style=\"position:relative;\"><a href=\"#05_arrowfunctionjs\" aria-label=\"05_arrowfunctionjs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>05_ArrowFunction.js</h3>\n<p>✨ 화살표 함수 사용법</p>\n<ul>\n<li>function 키워드를 생략하고 화살표 => 를 붙인다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">add</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token punctuation\">,</span> y</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token keyword\">return</span> x <span class=\"token operator\">+</span> y\r\n    <span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>리턴을 생략할 수 있습니다</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">subtract</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token punctuation\">,</span> y</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> x <span class=\"token operator\">-</span> y</code></pre></div>\n<br>\n<h3 id=\"-원본-변경-메서드-vs-간접-변경-메서드\" style=\"position:relative;\"><a href=\"#-%EC%9B%90%EB%B3%B8-%EB%B3%80%EA%B2%BD-%EB%A9%94%EC%84%9C%EB%93%9C-vs-%EA%B0%84%EC%A0%91-%EB%B3%80%EA%B2%BD-%EB%A9%94%EC%84%9C%EB%93%9C\" aria-label=\" 원본 변경 메서드 vs 간접 변경 메서드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>💡 원본 변경 메서드 vs 간접 변경 메서드</h3>\n<h4 id=\"1-원본-변경-메서드\" style=\"position:relative;\"><a href=\"#1-%EC%9B%90%EB%B3%B8-%EB%B3%80%EA%B2%BD-%EB%A9%94%EC%84%9C%EB%93%9C\" aria-label=\"1 원본 변경 메서드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 원본 변경 메서드</h4>\n<ul>\n<li>push()</li>\n<li>pop()</li>\n<li>shift()</li>\n<li>unshift()</li>\n<li>splice()</li>\n</ul>\n<h4 id=\"2-간접-변경-메서드\" style=\"position:relative;\"><a href=\"#2-%EA%B0%84%EC%A0%91-%EB%B3%80%EA%B2%BD-%EB%A9%94%EC%84%9C%EB%93%9C\" aria-label=\"2 간접 변경 메서드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 간접 변경 메서드</h4>\n<ul>\n<li>slice() // slice(0) === slice()</li>\n<li>concat()</li>\n<li>join()</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"> <span class=\"token keyword\">const</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'zero'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'one'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'two'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'three'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'four'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'five'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n\r\n <span class=\"token keyword\">const</span> copiedArr <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    copiedArr<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'changed in copiedArr'</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">.</span><span class=\"token function\">equal</span><span class=\"token punctuation\">(</span><span class=\"token string\">'three'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//원본 변경이 아닌 간접 변경!</span></code></pre></div>\n<p>slice() 메서드가 간접 변경 메서드이기 때문에 원본이 변경 되지 않는다.\r\n따라서, ‘changed in copiedArr’가 아닌 ‘three’가 정답이다.</p>\n<br>\n<h3 id=\"06_types-part2js\" style=\"position:relative;\"><a href=\"#06_types-part2js\" aria-label=\"06_types part2js permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>06_Types-part2.js</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>arr <span class=\"token operator\">===</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n<span class=\"token punctuation\">}</span> <span class=\"token comment\">//false</span></code></pre></div>\n<p>참조 자료형인 배열, 객체, 함수는 주소를 변수에 할당하기 때문에 우리가 보기에 요소가 같더라도 실제로 heap에 저장되어 있는 값은 다르다는 것이다.\r\n이 부분에 대해 배우지 않았다면, 위 코드가 왜 틀렸는지 몰랐을 것이다.</p>\n<br>\n<h3 id=\"08_objectjs\" style=\"position:relative;\"><a href=\"#08_objectjs\" aria-label=\"08_objectjs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>08_Object.js</h3>\n<p>✨ <strong>깊은 복사와 얕은 복사</strong></p>\n<ul>\n<li><strong>Array.prototype.slice</strong> : 배열을 깔끔하게 복사할 때 사용.</li>\n</ul>\n<p>start와 end가 주어지지 않으면 전체 배열을 복사한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\r\n<span class=\"token keyword\">const</span> copyArr <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token function\">checker</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> copyArr<span class=\"token punctuation\">)</span> <span class=\"token comment\">//true</span>\r\n<span class=\"token function\">checker</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> copyArr<span class=\"token punctuation\">)</span> <span class=\"token comment\">//false</span></code></pre></div>\n<p>단점은..\r\n<strong>중첩 구조 복사를 제대로 수행할 수 없다</strong>.\r\n원본과 복사본 모두 영향을 받기 때문에 <strong>얕은 복사</strong>를 수행한다. 따라서, 모든 값을 독립적으로 복사할 수 없다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\r\n<span class=\"token keyword\">const</span> copyArr <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token function\">checker</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> copyArr<span class=\"token punctuation\">)</span> <span class=\"token comment\">//true</span>\r\n<span class=\"token function\">checker</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> copyArr<span class=\"token punctuation\">)</span> <span class=\"token comment\">//true</span></code></pre></div>\n<ul>\n<li><strong>Object.assign()</strong> : 객체를 복사할 때 사용.</li>\n</ul>\n<p>메서드의 첫번째 인수로 빈 객체를 넣어주며, 두번째 인수로 할당할 객체를 넣으면 된다.\r\n열거할 수 있는 하나 이상의 출처 객체로부터 대상 객체로 속성을 복사할 때 사용합니다. 대상 객체를 반환합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> game <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token constant\">AOS</span><span class=\"token operator\">:</span> <span class=\"token string\">\"League of Legend\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">const</span> game2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> Sim<span class=\"token operator\">:</span> <span class=\"token string\">\"DCS Worlds\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">const</span> game3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token constant\">VR</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Half-Life: Alyx\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">const</span> myGames <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span>game<span class=\"token punctuation\">,</span> game2<span class=\"token punctuation\">,</span> game3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\nmyGames <span class=\"token comment\">// {AOS: \"League of Legend\", Sim: \"DCS Worlds\", VR: \"Half-Life: Alyx\"}</span></code></pre></div>\n<p>단점은..\r\n<strong>2차원 객체는 깊은 복사가 이루어지지 않는다.</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\r\n  a<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\r\n  b<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n    c<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\r\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">const</span> newObj <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\nnewObj<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">.</span>c <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\r\n\r\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// { a: 1, b: { c: 3 } }</span>\r\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">.</span>c <span class=\"token operator\">===</span> newObj<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">.</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\r\n\r\n<span class=\"token comment\">// 전개 연산자</span>\r\n<span class=\"token keyword\">const</span> newObj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>obj <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n\r\nnewObj<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">.</span>c <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\r\n\r\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// { a: 1, b: { c: 3 } }</span>\r\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">.</span>c <span class=\"token operator\">===</span> newObj<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">.</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span></code></pre></div>\n<p>전개 연산자를 활용해도 2차원 객체는 얕은 복사가 되는 것을 확인할 수 있다.</p>\n<br>\n<blockquote>\n<p><strong>정리</strong></p>\n</blockquote>\n<p>✔️ 자바스크립트 핵심 개념과 주요 문법에 대해 이해할 수 있었다.</p>\n<p>✔️ 복습하며 완벽하게 아는 것이 중요하다.</p>","frontmatter":{"date":"July 13, 2022","title":"JavaScript Koans","categories":"codestates blog","author":"김예린","emoji":"🤑"},"fields":{"slug":"/2022-07-13-JavaScript-Koans-post.md/"}},"prev":{"id":"25921d7a-96f1-5848-bc42-1bd267314d26","html":"<h3 id=\"유효성-검사\" style=\"position:relative;\"><a href=\"#%EC%9C%A0%ED%9A%A8%EC%84%B1-%EA%B2%80%EC%82%AC\" aria-label=\"유효성 검사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>유효성 검사</h3>\n<ul>\n<li>오늘 공부한 내용</li>\n<li>어려웠던 내용</li>\n<li>궁금한 내용과 부족한 내용 </li>\n<li>느낀점</li>\n</ul>\n<hr>\n<h3 id=\"--오늘-공부한-내용\" style=\"position:relative;\"><a href=\"#--%EC%98%A4%EB%8A%98-%EA%B3%B5%EB%B6%80%ED%95%9C-%EB%82%B4%EC%9A%A9\" aria-label=\"  오늘 공부한 내용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✨  오늘 공부한 내용</h3>\n<p>페어와 이틀동안 로그인 페이지를 제작해보았다.</p>\n<p>아이디를 4글자 이상 작성시 ‘사용할 수 있는 아이디입니다’ 라는 문구와 함께 녹색 박스가 나타나고, 아니라면 ‘아이디는 네 글자 이상이어야 합니다’ 라는 문구와 함께 빨간 박스가 나타나게 된다.</p>\n<p>비밀번호 재확인하여 일치 시 녹색 박스가 나타나고, 일치 하지 않으면 ‘비밀번호가 일치하지 않습니다’ 라는 문구와 함께 빨간 박스가 나타난다.</p>\n<br>\n<h3 id=\"--어려웠던-내용\" style=\"position:relative;\"><a href=\"#--%EC%96%B4%EB%A0%A4%EC%9B%A0%EB%8D%98-%EB%82%B4%EC%9A%A9\" aria-label=\"  어려웠던 내용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✨  어려웠던 내용</h3>\n<p>css를 수정할 때 이러한 기능을 넣고 싶었다.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.events input:focus ~ label,\r\n.events input:valid ~ label</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> -20px<span class=\"token punctuation\">;</span>\r\n  <span class=\"token comment\">/* left: 0; */</span>\r\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #03e9f4<span class=\"token punctuation\">;</span>\r\n  <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 12px<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>👍 input:focus : input을 클릭하면 label이 움직이는 애니메이션.\r\ntransition을 이용하는 애니메이션이다.</p>\n<p>👍 input:valid : input에 글을 써도 label이 위로 올라간 상태를 유지.</p>\n<p>결과적으로,</p>\n<p><img src=\"/f3da599a9197525c08a2dc5e6180bf94/valida.gif\" alt=\"Chinese Salty Egg\"></p>\n<p>다행히 생각했던 것과  비슷하게 구현이 되었다.</p>\n<p>이 기능을 적용하기 위해 박스 높이를 줄이고, margin이나 padding을 수정 등 작은 포인트들을 수정하느라 시간이 꽤 걸렸다.</p>\n<br>\n<h3 id=\"--부족한-내용\" style=\"position:relative;\"><a href=\"#--%EB%B6%80%EC%A1%B1%ED%95%9C-%EB%82%B4%EC%9A%A9\" aria-label=\"  부족한 내용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✨  부족한 내용</h3>\n<p>음.. 아쉬운 점이 많지만, 먼저 처음 시작 페이지에서 아이디 label 과 비밀번호 label의 간격을 좁혔어야 했다.</p>\n<p>나중에 비밀번호를 입력할 때 아주 적절한 간격이 만들어지지만, 아무것도 입력하지 않았을 때 보면 그렇게.. 부드러운 디자인은 아닌 것 같다는 생각이 들었다.</p>","frontmatter":{"date":"July 15, 2022","title":"[4주차] 4주차 회고 - 5일차","categories":"codestates blog","author":"김예린","emoji":null},"fields":{"slug":"/2022-07-15/"}},"site":{"siteMetadata":{"siteUrl":"https://yelinz515.github.io","comments":{"utterances":{"repo":"yelinz515/blog-comments"}}}}},"pageContext":{"slug":"/2022-07-14/","nextSlug":"/2022-07-13-JavaScript-Koans-post.md/","prevSlug":"/2022-07-15/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}